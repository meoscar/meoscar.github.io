<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LeetCode 4 Geeks</title>
    <link>https://meoscar.github.io/posts/</link>
    <description>Recent content in Posts on LeetCode 4 Geeks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en_US</language>
    
	<atom:link href="https://meoscar.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://meoscar.github.io/posts/algorithm_leetcode/leetcode2_addtwonumbers_medium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://meoscar.github.io/posts/algorithm_leetcode/leetcode2_addtwonumbers_medium/</guid>
      <description>2. Add Two Numbers You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8  /** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode(int x) { val = x; } * } */ public class Solution { public ListNode addTwoNumbers(ListNode l1, ListNode l2) { ListNode res = new ListNode(-1); ListNode tail = res; int carry = 0; while(l1 !</description>
    </item>
    
    <item>
      <title></title>
      <link>https://meoscar.github.io/posts/algorithm_leetcode/leetcode2_addtwonumbers_medium3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://meoscar.github.io/posts/algorithm_leetcode/leetcode2_addtwonumbers_medium3/</guid>
      <description>2. Add Two Numbers You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8  /** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode(int x) { val = x; } * } */ public class Solution { public ListNode addTwoNumbers(ListNode l1, ListNode l2) { ListNode res = new ListNode(-1); ListNode tail = res; int carry = 0; while(l1 !</description>
    </item>
    
  </channel>
</rss>